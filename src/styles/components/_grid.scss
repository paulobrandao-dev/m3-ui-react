@use '../mixin';
@use '../spacing';
@use '../max-content';
@use '../shape';

@mixin grid-item-rules($sizeName) {
  @for $i from 1 to 13 {
    > [data-grid-#{$sizeName}='#{$i}'] {
      grid-column: auto / span #{$i};
    }
  }
}

.material-grid {
  display: grid;
  width: 100%;
  max-width: var(--content-max-width);
  margin: 0 auto;
  grid-template-columns: repeat(12, 1fr);
  @extend %spacing-rules;
  @extend %max-content-styles;
  @extend %shape-style;

  @media screen and (min-width: 0) {
    @include grid-item-rules('compact');
  }

  @media screen and (min-width: 600px) {
    @include grid-item-rules('medium');
  }

  @media screen and (min-width: 840px) {
    grid-template-columns: repeat(12, 1fr);

    @include grid-item-rules('expanded');
  }

  @media screen and (min-width: 1200px) {
    @include grid-item-rules('large');
  }

  @media screen and (min-width: 1400px) {
    @include grid-item-rules('xlarge');
  }
}
