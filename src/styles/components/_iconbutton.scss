@use '../mixin' as *;

%icon-button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  border-radius: var(--shape-xl);
  @include state-layer;

  &:hover {
    @include state-layer-hover;
  }

  &:focus {
    @include state-layer-focus;
  }

  &:disabled {
    color: var(--color-on-surface);
  }
}

button.m3-icon-button {
  &-standard {
    @extend %icon-button;
    color: inherit;

    &[aria-pressed='true'] {
      color: var(--color-primary);
    }
  }

  &-outlined {
    @extend %icon-button;
    color: inherit;
    border: 1px solid var(--color-outline);

    &:disabled {
      border-color: var(--color-outline-disabled);
    }

    &[aria-pressed='true'] {
      background-color: var(--color-inverse-surface);
      color: var(--color-on-inverse-surface);
      border: none;

      &:disabled {
        background-color: var(--color-outline-disabled);
      }
    }
  }

  &-filled {
    @extend %icon-button;
    background-color: var(--color-primary);
    color: var(--color-on-primary);

    &:disabled {
      background-color: var(--color-outline-disabled);
    }

    &[aria-pressed='false'] {
      background-color: var(--color-surface-container-highest);
      color: var(--color-primary);
    }
  }

  &-tonal {
    @extend %icon-button;
    background-color: var(--color-secondary-container);
    color: var(--color-on-secondary-container);

    &:disabled {
      background-color: var(--color-outline-disabled);
    }

    &[aria-pressed='false'] {
      background-color: var(--color-surface-container-highest);
      color: var(--color-on-surface-variant);
    }
  }
}
