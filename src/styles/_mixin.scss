@use 'sass:selector';

@mixin unify-parent($child) {
  @at-root #{selector.unify(&, $child)} {
    @content;
  }
}

@mixin state-layer {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    z-index: 0;
    background-color: currentColor;
    opacity: 0;
    transition-property: opacity;
    transition-duration: var(--ease-duration);
    transition-timing-function: var(--ease-standard);
    pointer-events: none;
  }
}

@mixin state-layer-hover {
  &::before {
    opacity: var(--opacity-hover);
  }
}

@mixin state-layer-focus {
  &::before {
    opacity: var(--opacity-focus);
  }
}

@mixin skeleton {
  overflow: hidden;
  border-color: transparent;
  background-image: linear-gradient(
    90deg,
    var(--color-surface-container) 25%,
    var(--color-surface-container-low) 45%,
    var(--color-surface-container-lowest) 50%,
    var(--color-surface-container-low) 55%,
    var(--color-surface-container) 75%
  );
  background-size: 500% 500%;
  animation: skeletonWave 2s linear infinite;
}

@mixin spacing-rules($property, $auto: 0) {
  &__#{$property}-none {
    #{$property}: 0;
  }
  &__#{$property}-xs {
    #{$property}: var(--spacing-xs);
  }
  &__#{$property}-sm {
    #{$property}: var(--spacing-sm);
  }
  &__#{$property}-md {
    #{$property}: var(--spacing-md);
  }
  &__#{$property}-lg {
    #{$property}: var(--spacing-lg);
  }
  &__#{$property}-xl {
    #{$property}: var(--spacing-xl);
  }
  @if $auto == 1 {
    &__#{$property}-auto {
      #{$property}: auto;
    }
  }
}

@mixin flexbox-rules {
  &__flexbox {
    display: flex;

    &-direction {
      &-row {
        flex-direction: row;
      }
      &-row-reverse {
        flex-direction: row-reverse;
      }
      &-column {
        flex-direction: column;
      }
      &-column-reverse {
        flex-direction: column-reverse;
      }
    }

    &-align-items {
      &-baseline {
        align-items: baseline;
      }
      &-center {
        align-items: center;
      }
      &-flex-end {
        align-items: flex-end;
      }
      &-flex-start {
        align-items: flex-start;
      }
      &-stretch {
        align-items: stretch;
      }
    }

    &-justify-content {
      &-baseline {
        justify-content: baseline;
      }
      &-center {
        justify-content: center;
      }
      &-flex-end {
        justify-content: flex-end;
      }
      &-flex-start {
        justify-content: flex-start;
      }
      &-space-around {
        justify-content: space-around;
      }
      &-space-between {
        justify-content: space-between;
      }
      &-space-evenly {
        justify-content: space-evenly;
      }
      &-stretch {
        justify-content: stretch;
      }
    }

    &-align-self {
      &-auto {
        align-self: auto;
      }
      &-baseline {
        align-self: baseline;
      }
      &-center {
        align-self: center;
      }
      &-flex-end {
        align-self: flex-end;
      }
      &-flex-start {
        align-self: flex-start;
      }
      &-stretch {
        align-self: stretch;
      }
    }

    &-justify-self {
      &-auto {
        justify-self: auto;
      }
      &-baseline {
        justify-self: baseline;
      }
      &-center {
        justify-self: center;
      }
      &-flex-end {
        justify-self: flex-end;
      }
      &-flex-start {
        justify-self: flex-start;
      }
      &-stretch {
        justify-self: stretch;
      }
    }

    &-gap {
      &-none {
        gap: 0;
      }
      &-xs {
        gap: var(--spacing-xs);
      }
      &-sm {
        gap: var(--spacing-sm);
      }
      &-md {
        gap: var(--spacing-md);
      }
      &-lg {
        gap: var(--spacing-lg);
      }
      &-xl {
        gap: var(--spacing-xl);
      }
    }

    &-row-gap {
      &-none {
        gap: 0;
      }
      &-xs {
        row-gap: var(--spacing-xs);
      }
      &-sm {
        row-gap: var(--spacing-sm);
      }
      &-md {
        row-gap: var(--spacing-md);
      }
      &-lg {
        row-gap: var(--spacing-lg);
      }
      &-xl {
        row-gap: var(--spacing-xl);
      }
    }

    &-column-gap {
      &-none {
        gap: 0;
      }
      &-xs {
        column-gap: var(--spacing-xs);
      }
      &-sm {
        column-gap: var(--spacing-sm);
      }
      &-md {
        column-gap: var(--spacing-md);
      }
      &-lg {
        column-gap: var(--spacing-lg);
      }
      &-xl {
        column-gap: var(--spacing-xl);
      }
    }
  }
}

@mixin grid-rules {
  &__grid {
    display: grid;

    &-columns {
      &-2 {
        grid-template-columns: repeat(2, 1fr);
      }
      &-3 {
        grid-template-columns: repeat(3, 1fr);
      }
      &-4 {
        grid-template-columns: repeat(4, 1fr);
      }
      &-5 {
        grid-template-columns: repeat(5, 1fr);
      }
      &-6 {
        grid-template-columns: repeat(6, 1fr);
      }
      &-7 {
        grid-template-columns: repeat(7, 1fr);
      }
      &-8 {
        grid-template-columns: repeat(8, 1fr);
      }
      &-9 {
        grid-template-columns: repeat(9, 1fr);
      }
      &-10 {
        grid-template-columns: repeat(10, 1fr);
      }
      &-11 {
        grid-template-columns: repeat(11, 1fr);
      }
      &-12 {
        grid-template-columns: repeat(12, 1fr);
      }
    }

    &-gap {
      &-none {
        gap: 0;
      }
      &-xs {
        gap: var(--spacing-xs);
      }
      &-sm {
        gap: var(--spacing-sm);
      }
      &-md {
        gap: var(--spacing-md);
      }
      &-lg {
        gap: var(--spacing-lg);
      }
      &-xl {
        gap: var(--spacing-xl);
      }
    }

    &-row-gap {
      &-none {
        gap: 0;
      }
      &-xs {
        row-gap: var(--spacing-xs);
      }
      &-sm {
        row-gap: var(--spacing-sm);
      }
      &-md {
        row-gap: var(--spacing-md);
      }
      &-lg {
        row-gap: var(--spacing-lg);
      }
      &-xl {
        row-gap: var(--spacing-xl);
      }
    }

    &-column-gap {
      &-none {
        gap: 0;
      }
      &-xs {
        column-gap: var(--spacing-xs);
      }
      &-sm {
        column-gap: var(--spacing-sm);
      }
      &-md {
        column-gap: var(--spacing-md);
      }
      &-lg {
        column-gap: var(--spacing-lg);
      }
      &-xl {
        column-gap: var(--spacing-xl);
      }
    }
  }
}
